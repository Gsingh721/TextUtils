{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextArea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","useState","color","backgroundColor","mstyle","mode","className","id","style","type","Navbar","to","title","class","onClick","toggleMode","for","TextArea","text","settext","heading","rows","value","onChange","event","target","console","log","length","toUpperCase","getAlert","toLowerCase","txt","split","join","document","getElementById","select","navigator","clipboard","writeText","filter","ele","Alert","height","alert","role","word","lower","charAt","slice","capFirst","msg","App","setmode","setAlert","messege","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2NAEaA,EAAQ,SAACC,GAClB,MAA2BC,mBAAS,CAChCC,MAAO,QACPC,gBAAiB,UAFrB,mBAKA,GALA,UAK0BF,mBAAS,qBAAnC,mBAmBMG,GAnBN,UAmBc,CACFD,gBAAgC,SAAfH,EAAMK,KAAgB,QAAQ,QAC/CH,MAAoB,SAAbF,EAAMK,KAAc,QAAQ,UAE/C,OACI,mCACA,sBAAKC,UAAU,2BAA2BC,GAAG,mBAA7C,UAEN,sBAAKD,UAAU,iBAAiBE,MAAOJ,EAAvC,UACE,oBAAIE,UAAU,mBAAmBC,GAAG,aAAaC,MAAOJ,EAAxD,SACE,wBAAQE,UAAU,mBAAmBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAAcD,MAAOJ,EAAnK,iCAIF,qBAAKG,GAAG,cAAcD,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACE,sBAAKA,UAAU,iBAAf,UACE,8EADF,6WACqa,mDADra,uDAKJ,sBAAKA,UAAU,iBAAiBE,MAAOJ,EAAvC,UACE,oBAAIE,UAAU,mBAAmBC,GAAG,aAAaC,MAAOJ,EAAxD,SACE,wBAAQE,UAAU,6BAA6BG,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAcD,MAAOJ,EAA9K,iCAIF,qBAAKG,GAAG,cAAcD,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAA1G,SACE,sBAAKA,UAAU,iBAAf,UACE,+EADF,8WACua,mDADva,uDAKJ,sBAAKA,UAAU,iBAAiBE,MAAOJ,EAAvC,UACE,oBAAIE,UAAU,mBAAmBC,GAAG,eAAeC,MAAOJ,EAA1D,SACE,wBAAQE,UAAU,6BAA6BG,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAAgBD,MAAOJ,EAAlL,iCAIF,qBAAKG,GAAG,gBAAgBD,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA9G,SACE,sBAAKA,UAAU,iBAAf,UACE,8EADF,8WACsa,mDADta,6D,OC/DOI,EAAS,SAACV,GACnB,OACI,8BACA,qBAAKM,UAAS,yCAAoCN,EAAMK,KAA1C,eAAqDL,EAAMK,MAAzE,SACA,sBAAKC,UAAU,kBAAf,UACA,cAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,IAAlC,SAAuCX,EAAMY,QAC7C,wBAAQN,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BC,GAAG,yBAA7C,UACE,qBAAID,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOK,GAAG,IAAzD,oBAEF,oBAAIL,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWK,GAAG,SAA9B,wBAGJ,sBAAKE,MAAK,sCAA8C,SAAbb,EAAMK,KAAc,QAAQ,OAA7D,SAAV,UACM,uBAAOQ,MAAM,mBAAmBJ,KAAK,WAAWK,QAASd,EAAMe,WAAYR,GAAG,2BAC9E,uBAAOM,MAAM,mBAAmBG,IAAI,yBAApC,qCCpBHC,EAAW,SAACjB,GACrB,MAAwBC,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KA+CA,OACI,mCACI,sBAAKb,UAAU,sBAAsBE,MAAO,CAAEN,MAAoB,SAAbF,EAAMK,KAAc,QAAQ,SAAjF,UACI,6BAAKL,EAAMoB,UACX,0BACId,UAAU,eACVC,GAAG,OACHc,KAAK,IACLC,MAAOJ,EACPK,SAvDM,SAACC,GACnBL,EAAQK,EAAMC,OAAOH,OACrBI,QAAQC,IAAIT,IAsDAV,MAAO,CACHL,gBAA8B,SAAbH,EAAMK,KAAc,UAAU,WAC/CH,MAAoB,SAAbF,EAAMK,KAAc,QAAQ,WAG3C,wBAAQI,KAAK,UACTH,UAAU,uBACVQ,QA1DA,WACTI,EAAKU,OAAO,GACfT,EAAQD,EAAKW,eACVX,EAAKU,OAAO,EACf5B,EAAM8B,SAAS,2BAA2B,WAE1C9B,EAAM8B,SAAS,qBAAqB,YAkD5B,wBAKA,wBAAQrB,KAAK,UACTH,UAAU,4BACVQ,QAtDC,WACbK,EAAQD,EAAKa,eACVb,EAAKU,OAAO,EACf5B,EAAM8B,SAAS,2BAA2B,WAE1C9B,EAAM8B,SAAS,qBAAqB,YA+C5B,wBAKA,wBAAQrB,KAAK,UACTH,UAAU,4BACVQ,QApCI,WAChB,IAAIkB,EAAId,EAAKe,MAAM,QACnBd,EAAQa,EAAIE,KAAK,MACdhB,EAAKU,OAAO,EACf5B,EAAM8B,SAAS,uBAAuB,WAEtC9B,EAAM8B,SAAS,qBAAqB,YA4B5B,gCAKA,wBAAQrB,KAAK,UACTH,UAAU,4BACVQ,QApDE,WACd,IAAIkB,EAAIG,SAASC,eAAe,QAChCJ,EAAIK,SAEJC,UAAUC,UAAUC,UAAUR,EAAIV,OAC/BJ,EAAKU,OAAO,EACf5B,EAAM8B,SAAS,sBAAsB,WAErC9B,EAAM8B,SAAS,qBAAqB,YA0C5B,uBAKA,wBAAQrB,KAAK,UACTH,UAAU,4BACVQ,QA7DG,WACfK,EAAQ,KA0DA,mBAKA,oBAAIb,UAAU,QAAd,kCACA,uDAA0BY,EAAKU,UAC/B,mDAAsBV,EAAKe,MAAM,KAAKQ,QAAO,SAACC,GAAO,OAAOA,EAAId,OAAO,KAAIA,UAC3E,mDAAoF,KAA7DV,EAAKe,MAAM,KAAKQ,QAAO,SAACC,GAAO,OAAOA,EAAId,OAAO,KAAIA,OAA5E,UACA,oBAAItB,UAAU,QAAd,uBACA,4BAAIY,EAAKU,OAAO,EAAEV,EAAK,+DC9F1ByB,EAAQ,SAAC3C,GAKlB,OACI,qBAAKQ,MAAO,CAACoC,OAAO,QAApB,SACC5C,EAAM6C,OAAS,sBAAKvC,UAAS,sBAAiBN,EAAM6C,MAAMpC,KAA7B,gCAAiEqC,KAAK,QAApF,UACZ,iCAPO,SAACC,GACZ,IAAIC,EAAMD,EAAKhB,cACf,OAAOiB,EAAMC,OAAO,GAAGpB,cAAgBmB,EAAME,MAAM,GAKtCC,CAASnD,EAAM6C,MAAMpC,QADlB,IACmCT,EAAM6C,MAAMO,IAC3D,wBAAQ3C,KAAK,SAASH,UAAU,YAAY,kBAAgB,QAAQ,aAAW,gB,OC+C5E+C,MA9Cf,WAEE,MAAwBpD,mBAAS,SAAjC,mBAAOI,EAAP,KAAaiD,EAAb,KACA,EAA0BrD,mBAAS,MAAnC,mBAAO4C,EAAP,KAAcU,EAAd,KAEMzB,EAAS,SAAC0B,EAAQ/C,GACtB8C,EAAS,CACPH,IAAKI,EACL/C,KAAMA,IAERgD,YAAW,WACTF,EAAS,QACR,OAaL,OACE,cAAC,IAAD,UACA,qCAEE,cAAC,EAAD,CAAQ3C,MAAM,aAAaP,KAAMA,EAAMU,WAd1B,WACH,SAAPV,GACDiD,EAAQ,SACRnB,SAASuB,KAAKlD,MAAML,gBAAkB,UAEtCmD,EAAQ,QACRnB,SAASuB,KAAKlD,MAAML,gBAAkB,UACtC2B,EAAS,oBAAsB,eAQjC,cAAC,EAAD,CAAOe,MAAOA,IAEV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,CAAOvD,KAAMA,MAEjB,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAUxC,QAAQ,wBAAwBf,KAAMA,EAAMyB,SAAUA,eCrCjE+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.d86a4577.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nexport const About = (props) => {\r\n    const[myStyle,setMyStyle]= useState({\r\n        color: 'black',\r\n        backgroundColor: 'white',\r\n    });\r\n\r\n    const [btnTxt,setbtnText]=useState('Enable Dark Mode');\r\n\r\n    const changeMode = ()=>{\r\n        if(myStyle.color==='white'){\r\n            console.log(\"hi\");\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            });\r\n            setbtnText('Enable Dark Mode');\r\n        }\r\n        else{\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            });\r\n            setbtnText('Enable Light Mode');\r\n        }\r\n    }\r\n    const mstyle= {\r\n                backgroundColor: props.mode === 'dark'?'black':'white',\r\n                color: props.mode!=='dark'?'black':'white'\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"accordion container my-4\" id=\"accordionExample\"\r\n    >\r\n  <div className=\"accordion-item\" style={mstyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\" style={mstyle}>\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={mstyle}>\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={mstyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\" style={mstyle}>\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={mstyle}>\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={mstyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\" style={mstyle}>\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={mstyle}>\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { About } from './About'\r\nexport const Navbar = (props) => {\r\n    return (\r\n        <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <div class={`form-check form-switch text-${props.mode==='dark'?'light':'dark'} mx-2`}>\r\n                <input class=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </nav>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport React from 'react'\r\n\r\nexport const TextArea = (props) => {\r\n    const [text, settext] = useState(\"\");\r\n    const onChangehandler=(event)=>{\r\n        settext(event.target.value);\r\n        console.log(text);\r\n    }\r\n\r\n    const onUpClick=()=>{\r\n        if(text.length>0)\r\n        settext(text.toUpperCase());\r\n        if(text.length>0)\r\n        props.getAlert(\"Converted into UpperCase\",\"success\");\r\n        else\r\n        props.getAlert(\"Enter some text!!!\",\"warning\");\r\n    }\r\n\r\n    const onlowClick=()=>{\r\n        settext(text.toLowerCase());\r\n        if(text.length>0)\r\n        props.getAlert(\"Converted into LowerCase\",\"success\");\r\n        else\r\n        props.getAlert(\"Enter some text!!!\",\"warning\");\r\n    }\r\n\r\n    const onClearClick=()=>{\r\n        settext(\"\");\r\n    }\r\n\r\n    const onCopyClick=()=>{\r\n        var txt=document.getElementById('myid');\r\n        txt.select();\r\n        //txt.setSelectionRange(0,99999);\r\n        navigator.clipboard.writeText(txt.value);\r\n        if(text.length>0)\r\n        props.getAlert(\"Copied on Clipboard\",\"success\");\r\n        else\r\n        props.getAlert(\"Enter some text!!!\",\"warning\");\r\n    }\r\n\r\n    const onRemoveExtra=()=>{\r\n        var txt=text.split(/[ ]+/);\r\n        settext(txt.join(\" \"));\r\n        if(text.length>0)\r\n        props.getAlert(\"Removed extra spaces\",\"success\");\r\n        else\r\n        props.getAlert(\"Enter some text!!!\",\"warning\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 my-3 container\" style={{ color: props.mode==='dark'?'white':'black'}}>\r\n                <h2>{props.heading}</h2>\r\n                <textarea \r\n                    className=\"form-control\" \r\n                    id=\"myid\" \r\n                    rows=\"8\"\r\n                    value={text}\r\n                    onChange={onChangehandler}\r\n                    style={{\r\n                        backgroundColor: props.mode==='dark'?'#2A2B2D':'#D7F5F7 ',\r\n                        color: props.mode==='dark'?'white':'black'\r\n                    }}\r\n                ></textarea>\r\n                <button type=\"button \" \r\n                    className=\"btn btn-primary my-2\"\r\n                    onClick={onUpClick}\r\n                >Upper Case</button>\r\n\r\n                <button type=\"button \" \r\n                    className=\"btn btn-primary my-2 mx-2\"\r\n                    onClick={onlowClick}\r\n                >Lower Case</button>\r\n\r\n                <button type=\"button \" \r\n                    className=\"btn btn-primary my-2 mx-2\"\r\n                    onClick={onRemoveExtra}\r\n                >Remove Extra space</button>\r\n\r\n                <button type=\"button \" \r\n                    className=\"btn btn-primary my-2 mx-2\"\r\n                    onClick={onCopyClick}\r\n                >Copy Text</button>\r\n\r\n                <button type=\"button \" \r\n                    className=\"btn btn-primary my-2 mx-2\"\r\n                    onClick={onClearClick}\r\n                >Clear</button>\r\n                \r\n                <h3 className=\" my-3\">Preview of your Text</h3>\r\n                <p>Number of charectors: {text.length}</p>\r\n                <p>Number of words : {text.split(' ').filter((ele)=>{return ele.length>0}).length}</p>\r\n                <p>Minutes to Read : {(text.split(' ').filter((ele)=>{return ele.length>0}).length)*0.008} Min</p>\r\n                <h4 className=\" my-3\">Your Text</h4>\r\n                <p>{text.length>0?text:'Write your text in above textbox to preview it here.'}</p>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Alert = (props) => {\r\n    const capFirst=(word)=>{\r\n        var lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capFirst(props.alert.type)}</strong> {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport { About } from './Components/About';\nimport { Navbar } from './Components/Navbar';\nimport { TextArea } from './Components/TextArea';\nimport React, {useState} from 'react';\nimport { Alert } from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const getAlert=(messege,type)=>{\n    setAlert({\n      msg: messege,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);  \n   \n  }\n  const toggleMode=()=>{\n      if(mode==='dark'){\n        setmode(\"light\");\n        document.body.style.backgroundColor = 'white';  \n      }else{\n        setmode('dark');\n        document.body.style.backgroundColor = '#094089';\n        getAlert('Dark Mode Enabled' , 'success');\n      }\n  }\n  return (\n    <Router>\n    <>\n    \n      <Navbar title=\"Text-Utils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      \n          <Switch>\n            <Route exact path=\"/about\">\n                <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/\">\n                <TextArea heading=\"Enter text to analyse\" mode={mode} getAlert={getAlert}/>\n            </Route>\n        </Switch>\n    \n    </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}